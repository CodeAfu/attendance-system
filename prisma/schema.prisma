// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("NEXT_PUBLIC_POSTGRES_DATABASE_URL")
  shadowDatabaseUrl = env("LOCAL_DATABASE_URL")
}

model SystemUser {
  id             String    @id @default(cuid())
  email          String    @unique
  hashedPassword String
  role           String
  image          String?
  isLocked       Boolean   @default(false)
  lockStart      DateTime?
  lockEnd        DateTime?
  updatedAt      DateTime  @updatedAt
  createdAt      DateTime  @default(now())
}

model Course {
  id                String             @id @default(cuid())
  courseName        String
  courseId          String             @unique
  trainerName       String?
  trainees          Trainee[]
  attendanceRecords AttendanceRecord[]
  updatedAt         DateTime           @updatedAt
  createdAt         DateTime           @default(now())
}

model Trainee {
  id                String             @id @default(cuid())
  firstName         String
  lastName          String
  gender            String?
  dob               String?
  citizenship       String?
  nric              String?            @unique
  email             String?
  contactNo         String?
  employer          String?
  Course            Course?            @relation(fields: [courseId], references: [id])
  courseId          String?
  attendanceRecords AttendanceRecord[]
  updatedAt         DateTime           @updatedAt
  createdAt         DateTime           @default(now())
}

model AttendanceRecord {
  id              String   @id @default(cuid())
  course          Course   @relation(fields: [courseId], references: [id])
  courseId        String
  venue           String?
  date            DateTime
  base64Signature String
  TraineeRecord   Trainee? @relation(fields: [traineeRecordId], references: [id])
  traineeRecordId String?
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
}
