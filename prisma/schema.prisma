generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_PUBLIC_POSTGRES_DATABASE_URL")
}

model SystemUser {
  id             String    @id @default(cuid())
  email          String    @unique
  hashedPassword String
  role           String
  image          String?
  isLocked       Boolean   @default(false)
  lockStart      DateTime?
  lockEnd        DateTime?
  updatedAt      DateTime  @updatedAt
  createdAt      DateTime  @default(now())
}

model Course {
  id                String             @id @default(cuid())
  courseName        String
  courseId          String             @unique // Combination of Course Name and Training Date
  trainerName       String?
  startDate         DateTime?          @db.Timestamptz
  endDate           DateTime?          @db.Timestamptz
  venue             String?
  attendanceRecords AttendanceRecord[]
  trainee           Trainee[]
  updatedAt         DateTime           @updatedAt
  createdAt         DateTime           @default(now())
}

model Trainee {
  id                String             @id @default(cuid())
  firstName         String
  lastName          String
  gender            String?
  dob               String?
  citizenship       String?
  nric              String?            @unique
  email             String?
  contactNo         String?
  employer          String?
  attendanceRecords AttendanceRecord[]
  courses           Course[]
  updatedAt         DateTime           @updatedAt
  createdAt         DateTime           @default(now())
}

model AttendanceRecord {
  id              String   @id @default(cuid())
  Trainee         Trainee? @relation(fields: [traineeId], references: [id])
  traineeId       String?
  course          Course?  @relation(fields: [courseId], references: [id])
  courseId        String
  base64Signature String
  updatedAt       DateTime @updatedAt
  createdAt       DateTime @default(now())
}
